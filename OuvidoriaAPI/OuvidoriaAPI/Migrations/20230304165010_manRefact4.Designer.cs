// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OuvidoriaAPI.Data;

#nullable disable

namespace OuvidoriaAPI.Migrations
{
    [DbContext(typeof(OuvidoriaContext))]
    [Migration("20230304165010_manRefact4")]
    partial class manRefact4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OuvidoriaAPI.Domain.Manifestacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVisualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<Guid?>("RespostaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoSolicitacao")
                        .HasColumnType("int");

                    b.Property<Guid?>("VisOuvidorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RespostaId");

                    b.HasIndex("SetorId");

                    b.HasIndex("VisOuvidorId");

                    b.ToTable("Manifestacoes");
                });

            modelBuilder.Entity("OuvidoriaAPI.Domain.Ouvidor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Ouvidores");
                });

            modelBuilder.Entity("OuvidoriaAPI.Domain.RespostaManifestacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Acao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte[]>("Anexo")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailSetorEncaminhar")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("OuvidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetorIdEncaminhar")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("OuvidorId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("OuvidoriaAPI.Domain.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("OuvidoriaAPI.Domain.Manifestacao", b =>
                {
                    b.HasOne("OuvidoriaAPI.Domain.RespostaManifestacao", "Resposta")
                        .WithMany()
                        .HasForeignKey("RespostaId");

                    b.HasOne("OuvidoriaAPI.Domain.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OuvidoriaAPI.Domain.Ouvidor", "VisOuvidor")
                        .WithMany()
                        .HasForeignKey("VisOuvidorId");

                    b.Navigation("Resposta");

                    b.Navigation("Setor");

                    b.Navigation("VisOuvidor");
                });

            modelBuilder.Entity("OuvidoriaAPI.Domain.RespostaManifestacao", b =>
                {
                    b.HasOne("OuvidoriaAPI.Domain.Ouvidor", "Ouvidor")
                        .WithMany()
                        .HasForeignKey("OuvidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ouvidor");
                });
#pragma warning restore 612, 618
        }
    }
}
